{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/WorkflowBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, { addEdge, Background, BackgroundVariant, Controls, useEdgesState, useNodesState, ConnectionLineType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { Box, Button, Chip, Typography } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ApiSidebar from './ApiSidebar';\nimport JobsPanel from './JobsPanel';\nimport ResponseSelectorModal from './ResponseSelectorModal';\nimport TaskNode from './TaskNode';\nimport ApiNode from './ApiNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/* -------------------------------------------------------------------------- */\n/*                         Helper / internal type guards                      */\n/* -------------------------------------------------------------------------- */\n\nconst isApiNode = n => {\n  var _n$data;\n  return n.type === 'api' || ((_n$data = n.data) === null || _n$data === void 0 ? void 0 : _n$data.isApi);\n};\nconst isTaskNode = n => {\n  var _n$data2;\n  return n.type === 'task' || ((_n$data2 = n.data) === null || _n$data2 === void 0 ? void 0 : _n$data2.isTask);\n};\n\n/* -------------------------------------------------------------------------- */\n/*                              React Component                                */\n/* -------------------------------------------------------------------------- */\n\nconst WorkflowBuilder = ({\n  workflowState,\n  setWorkflowState\n}) => {\n  _s();\n  var _pendingConnection$so;\n  /* ------------------------------ react-flow ------------------------------ */\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const nodeTypes = useMemo(() => ({\n    task: TaskNode,\n    api: ApiNode\n  }), []);\n\n  /* ------------------------------ UI State ------------------------------- */\n  const [isResponseModalOpen, setIsResponseModalOpen] = useState(false);\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  /* ----------------------------- Sound refs ------------------------------ */\n  const clickSoundRef = useRef(null);\n  const dropSoundRef = useRef(null);\n  const connectSoundRef = useRef(null);\n  useEffect(() => {\n    clickSoundRef.current = new Audio('/sounds/click.mp3');\n    dropSoundRef.current = new Audio('/sounds/drop.mp3');\n    connectSoundRef.current = new Audio('/sounds/connect.mp3');\n  }, []);\n\n  /* ----------------------------- Helpers --------------------------------- */\n  const play = ref => {\n    var _ref$current;\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.play().catch(() => {/* ignore */});\n  };\n\n  /* --------------------------- Drag-and-drop ----------------------------- */\n  const handleTaskSelect = useCallback(task => {\n    play(clickSoundRef);\n    const taskNode = {\n      id: `task-${task.id}-${Date.now()}`,\n      type: 'task',\n      position: {\n        x: 100,\n        y: 100 + nodes.length * 40\n      },\n      data: {\n        label: task.name,\n        task,\n        isTask: true\n      }\n    };\n    setNodes(ns => [...ns, taskNode]);\n  }, [nodes]);\n  const handleApiDrop = useCallback(raw => {\n    var _data, _data$api;\n    play(dropSoundRef);\n    let data = typeof raw === 'string' ? JSON.parse(raw) : raw;\n    if ((_data = data) !== null && _data !== void 0 && _data.data) data = {\n      ...data,\n      ...data.data\n    };\n    const apiNode = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      position: data.position || {\n        x: 300,\n        y: 200\n      },\n      data: {\n        ...data,\n        isApi: true,\n        label: data.label || ((_data$api = data.api) === null || _data$api === void 0 ? void 0 : _data$api.name) || 'API'\n      }\n    };\n    setNodes(ns => [...ns, apiNode]);\n  }, []);\n\n  /* -------------------------- Connection Logic --------------------------- */\n  const isValidConnection = useCallback(conn => {\n    const s = nodes.find(n => n.id === conn.source);\n    const t = nodes.find(n => n.id === conn.target);\n    if (!s || !t) return false;\n    // Allow task→api or api→api\n    if (isTaskNode(s) && isApiNode(t)) return true;\n    if (isApiNode(s) && isApiNode(t)) return true;\n    return false;\n  }, [nodes]);\n  const onConnect = useCallback(params => {\n    if (!isValidConnection(params)) return;\n    const sNode = nodes.find(n => n.id === params.source);\n    const tNode = nodes.find(n => n.id === params.target);\n\n    // For api→api ask response mapping, else create directly\n    if (sNode && tNode && isApiNode(sNode) && isApiNode(tNode)) {\n      setPendingConnection(params);\n      setIsResponseModalOpen(true);\n    } else {\n      setEdges(es => addEdge({\n        ...params,\n        animated: true\n      }, es));\n      play(connectSoundRef);\n    }\n  }, [nodes]);\n  const handleResponseSelection = useCallback(responseId => {\n    if (pendingConnection) {\n      setEdges(es => addEdge({\n        ...pendingConnection,\n        id: `edge-${Date.now()}`,\n        data: {\n          responseId\n        },\n        animated: true\n      }, es));\n      play(connectSoundRef);\n    }\n    setPendingConnection(null);\n    setIsResponseModalOpen(false);\n  }, [pendingConnection]);\n\n  /* -------------------------- Traverse / export -------------------------- */\n\n  const traverseWorkflow = useCallback(() => {\n    // order by layout (x) then (y)\n    const apiNodes = nodes.filter(isApiNode).sort((a, b) => a.position.x - b.position.x || a.position.y - b.position.y);\n    const items = apiNodes.map((n, idx) => {\n      var _n$data3;\n      // incoming from task → event group\n      const incoming = edges.filter(e => e.target === n.id);\n      let eventGroup = null;\n      incoming.forEach(e => {\n        var _label, _src$data;\n        const src = nodes.find(no => no.id === e.source);\n        if (src && isTaskNode(src)) eventGroup = (_label = (_src$data = src.data) === null || _src$data === void 0 ? void 0 : _src$data.label) !== null && _label !== void 0 ? _label : null;\n      });\n\n      // outgoing api→api success targets (first 3)\n      const outgoing = edges.filter(e => e.source === n.id).slice(0, 3);\n      const successTargets = outgoing.map(e => {\n        var _tgt$data, _tgt$data2, _tgt$data2$api;\n        const tgt = nodes.find(no => no.id === e.target);\n        return (tgt === null || tgt === void 0 ? void 0 : (_tgt$data = tgt.data) === null || _tgt$data === void 0 ? void 0 : _tgt$data.label) || (tgt === null || tgt === void 0 ? void 0 : (_tgt$data2 = tgt.data) === null || _tgt$data2 === void 0 ? void 0 : (_tgt$data2$api = _tgt$data2.api) === null || _tgt$data2$api === void 0 ? void 0 : _tgt$data2$api.name) || (tgt === null || tgt === void 0 ? void 0 : tgt.id);\n      });\n      return {\n        id: String(idx + 1),\n        investor_name: workflowState.lenderName.toLowerCase(),\n        api_name: ((_n$data3 = n.data) === null || _n$data3 === void 0 ? void 0 : _n$data3.label) || `api_${idx + 1}`,\n        order: idx + 1,\n        event_group: eventGroup,\n        action_on_success_1: successTargets[0] ? [successTargets[0]] : [],\n        action_on_success_2: successTargets[1] ? [successTargets[1]] : [],\n        action_on_success_3: successTargets[2] ? [successTargets[2]] : []\n      };\n    });\n    const jsonStr = JSON.stringify(items, null, 2);\n    const blob = new Blob([jsonStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${workflowState.lenderName}_workflow.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [nodes, edges, workflowState]);\n  ;\n\n  /* ---------------------------- Render ---------------------------------- */\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        p: 2,\n        display: 'flex',\n        gap: 2,\n        alignItems: 'center',\n        zIndex: 1000,\n        bgcolor: 'white',\n        borderBottom: '1px solid #e0e0e0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"LSS Workflow Builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Asset: ${workflowState.assetClass}`,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Lender: ${workflowState.lenderName}`,\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 47\n        }, this),\n        onClick: () => setWorkflowState({\n          assetClass: '',\n          lenderName: '',\n          nodes: [],\n          edges: []\n        }),\n        children: \"Back to Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        disabled: nodes.length === 0,\n        onClick: traverseWorkflow,\n        children: \"Traverse & Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApiSidebar, {\n      lenderName: workflowState.lenderName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        mt: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        connectionLineType: ConnectionLineType.SmoothStep,\n        onDrop: evt => {\n          evt.preventDefault();\n          const data = evt.dataTransfer.getData('application/reactflow');\n          if (data) handleApiDrop(data);\n        },\n        onDragOver: evt => {\n          evt.preventDefault();\n          evt.dataTransfer.dropEffect = 'move';\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          gap: 20,\n          size: 1,\n          variant: BackgroundVariant.Dots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobsPanel, {\n      onNodeAdd: handleApiDrop,\n      onTaskSelect: handleTaskSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponseSelectorModal, {\n      open: isResponseModalOpen,\n      onClose: () => {\n        setIsResponseModalOpen(false);\n        setPendingConnection(null);\n      },\n      onSelect: handleResponseSelection,\n      sourceNodeId: (_pendingConnection$so = pendingConnection === null || pendingConnection === void 0 ? void 0 : pendingConnection.source) !== null && _pendingConnection$so !== void 0 ? _pendingConnection$so : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkflowBuilder, \"QBYsgzjX3UzU99SAUaF61CCy/wk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = WorkflowBuilder;\nexport default WorkflowBuilder;\nvar _c;\n$RefreshReg$(_c, \"WorkflowBuilder\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","addEdge","Background","BackgroundVariant","Controls","useEdgesState","useNodesState","ConnectionLineType","Box","Button","Chip","Typography","ArrowBackIcon","ApiSidebar","JobsPanel","ResponseSelectorModal","TaskNode","ApiNode","jsxDEV","_jsxDEV","isApiNode","n","_n$data","type","data","isApi","isTaskNode","_n$data2","isTask","WorkflowBuilder","workflowState","setWorkflowState","_s","_pendingConnection$so","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeTypes","task","api","isResponseModalOpen","setIsResponseModalOpen","pendingConnection","setPendingConnection","selectedTask","setSelectedTask","clickSoundRef","dropSoundRef","connectSoundRef","current","Audio","play","ref","_ref$current","catch","handleTaskSelect","taskNode","id","Date","now","position","x","y","length","label","name","ns","handleApiDrop","raw","_data","_data$api","JSON","parse","apiNode","isValidConnection","conn","s","find","source","t","target","onConnect","params","sNode","tNode","es","animated","handleResponseSelection","responseId","traverseWorkflow","apiNodes","filter","sort","a","b","items","map","idx","_n$data3","incoming","e","eventGroup","forEach","_label","_src$data","src","no","outgoing","slice","successTargets","_tgt$data","_tgt$data2","_tgt$data2$api","tgt","String","investor_name","lenderName","toLowerCase","api_name","order","event_group","action_on_success_1","action_on_success_2","action_on_success_3","jsonStr","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","sx","height","display","children","top","left","right","p","gap","alignItems","zIndex","bgcolor","borderBottom","variant","fileName","_jsxFileName","lineNumber","columnNumber","assetClass","color","flexGrow","startIcon","onClick","disabled","flex","mt","fitView","connectionLineType","SmoothStep","onDrop","evt","preventDefault","dataTransfer","getData","onDragOver","dropEffect","size","Dots","onNodeAdd","onTaskSelect","open","onClose","onSelect","sourceNodeId","_c","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/WorkflowBuilder.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  BackgroundVariant,\n  Connection,\n  Controls,\n  Edge,\n  Node,\n  NodeTypes,\n  useEdgesState,\n  useNodesState,\n  NodeMouseHandler,\n  ConnectionLineType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport {\n  Box,\n  Button,\n  Chip,\n  Typography,\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport { WorkflowState, Task } from '../types';\nimport ApiSidebar from './ApiSidebar';\nimport JobsPanel from './JobsPanel';\nimport ResponseSelectorModal from './ResponseSelectorModal';\nimport TaskNode from './TaskNode';\nimport ApiNode from './ApiNode';\n\ninterface WorkflowBuilderProps {\n  workflowState: WorkflowState;\n  setWorkflowState: React.Dispatch<React.SetStateAction<WorkflowState>>;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         Helper / internal type guards                      */\n/* -------------------------------------------------------------------------- */\n\nconst isApiNode = (n: Node<any>): boolean => n.type === 'api' || n.data?.isApi;\nconst isTaskNode = (n: Node<any>): boolean => n.type === 'task' || n.data?.isTask;\n\n/* -------------------------------------------------------------------------- */\n/*                              React Component                                */\n/* -------------------------------------------------------------------------- */\n\nconst WorkflowBuilder: React.FC<WorkflowBuilderProps> = ({ workflowState, setWorkflowState }) => {\n  /* ------------------------------ react-flow ------------------------------ */\n  const [nodes, setNodes, onNodesChange] = useNodesState<Node[]>([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState<Edge[]>([]);\n\n  const nodeTypes: NodeTypes = useMemo(() => ({ task: TaskNode, api: ApiNode }), []);\n\n  /* ------------------------------ UI State ------------------------------- */\n  const [isResponseModalOpen, setIsResponseModalOpen] = useState(false);\n  const [pendingConnection, setPendingConnection] = useState<Connection | null>(null);\n\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n\n  /* ----------------------------- Sound refs ------------------------------ */\n  const clickSoundRef = useRef<HTMLAudioElement | null>(null);\n  const dropSoundRef = useRef<HTMLAudioElement | null>(null);\n  const connectSoundRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    clickSoundRef.current = new Audio('/sounds/click.mp3');\n    dropSoundRef.current = new Audio('/sounds/drop.mp3');\n    connectSoundRef.current = new Audio('/sounds/connect.mp3');\n  }, []);\n\n  /* ----------------------------- Helpers --------------------------------- */\n  const play = (ref: React.RefObject<HTMLAudioElement>) => {\n    ref.current?.play().catch(() => {/* ignore */});\n  };\n\n  /* --------------------------- Drag-and-drop ----------------------------- */\n  const handleTaskSelect = useCallback((task: Task) => {\n    play(clickSoundRef);\n\n    const taskNode: Node = {\n      id: `task-${task.id}-${Date.now()}`,\n      type: 'task',\n      position: { x: 100, y: 100 + (nodes.length * 40) },\n      data: {\n        label: task.name,\n        task,\n        isTask: true,\n      },\n    };\n    setNodes((ns) => [...ns, taskNode]);\n  }, [nodes]);\n\n  const handleApiDrop = useCallback((raw: any) => {\n    play(dropSoundRef);\n\n    let data = typeof raw === 'string' ? JSON.parse(raw) : raw;\n    if (data?.data) data = { ...data, ...data.data };\n\n    const apiNode: Node = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      position: data.position || { x: 300, y: 200 },\n      data: {\n        ...data,\n        isApi: true,\n        label: data.label || data.api?.name || 'API',\n      },\n    };\n    setNodes((ns) => [...ns, apiNode]);\n  }, []);\n\n  /* -------------------------- Connection Logic --------------------------- */\n  const isValidConnection = useCallback((conn: Connection) => {\n    const s = nodes.find((n) => n.id === conn.source);\n    const t = nodes.find((n) => n.id === conn.target);\n    if (!s || !t) return false;\n    // Allow task→api or api→api\n    if (isTaskNode(s) && isApiNode(t)) return true;\n    if (isApiNode(s) && isApiNode(t)) return true;\n    return false;\n  }, [nodes]);\n\n  const onConnect = useCallback((params: Connection) => {\n    if (!isValidConnection(params)) return;\n\n    const sNode = nodes.find((n) => n.id === params.source);\n    const tNode = nodes.find((n) => n.id === params.target);\n\n    // For api→api ask response mapping, else create directly\n    if (sNode && tNode && isApiNode(sNode) && isApiNode(tNode)) {\n      setPendingConnection(params);\n      setIsResponseModalOpen(true);\n    } else {\n      setEdges((es) => addEdge({ ...params, animated: true }, es));\n      play(connectSoundRef);\n    }\n  }, [nodes]);\n\n  const handleResponseSelection = useCallback((responseId: string) => {\n    if (pendingConnection) {\n      setEdges((es) => addEdge({ ...pendingConnection, id: `edge-${Date.now()}`, data: { responseId }, animated: true }, es));\n      play(connectSoundRef);\n    }\n    setPendingConnection(null);\n    setIsResponseModalOpen(false);\n  }, [pendingConnection]);\n\n  /* -------------------------- Traverse / export -------------------------- */\n  type ExportItem = {\n    id: string;\n    investor_name: string;\n    api_name: string;\n    order: number;\n    event_group: string | null;\n    action_on_success_1: string[];\n    action_on_success_2: string[];\n    action_on_success_3: string[];\n    // plus many static fields… keeping minimal for brevity\n  };\n\n  const traverseWorkflow = useCallback(() => {\n    // order by layout (x) then (y)\n    const apiNodes = nodes.filter(isApiNode).sort((a, b) => (a.position.x - b.position.x) || (a.position.y - b.position.y));\n\n    const items: ExportItem[] = apiNodes.map((n, idx) => {\n      // incoming from task → event group\n      const incoming = edges.filter((e) => e.target === n.id);\n      let eventGroup: string | null = null;\n      incoming.forEach((e) => {\n        const src = nodes.find((no) => no.id === e.source);\n        if (src && isTaskNode(src)) eventGroup = (src.data as any)?.label ?? null;\n      });\n\n      // outgoing api→api success targets (first 3)\n      const outgoing = edges.filter((e) => e.source === n.id).slice(0, 3);\n      const successTargets = outgoing.map((e) => {\n        const tgt = nodes.find((no) => no.id === e.target);\n        return (tgt?.data as any)?.label || (tgt?.data as any)?.api?.name || tgt?.id;\n      });\n\n      return {\n        id: String(idx + 1),\n        investor_name: workflowState.lenderName.toLowerCase(),\n        api_name: (n.data as any)?.label || `api_${idx + 1}`,\n        order: idx + 1,\n        event_group: eventGroup,\n        action_on_success_1: successTargets[0] ? [successTargets[0]] : [],\n        action_on_success_2: successTargets[1] ? [successTargets[1]] : [],\n        action_on_success_3: successTargets[2] ? [successTargets[2]] : [],\n      };\n    });\n\n    const jsonStr = JSON.stringify(items, null, 2);\n    const blob = new Blob([jsonStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${workflowState.lenderName}_workflow.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [nodes, edges, workflowState]);;\n\n  /* ---------------------------- Render ---------------------------------- */\n  return (\n    <Box sx={{ height: '100vh', display: 'flex' }}>\n      {/* Header */}\n      <Box sx={{ position: 'absolute', top: 0, left: 0, right: 0, p: 2, display: 'flex', gap: 2, alignItems: 'center', zIndex: 1000, bgcolor: 'white', borderBottom: '1px solid #e0e0e0' }}>\n        <Typography variant=\"h6\">LSS Workflow Builder</Typography>\n        <Chip label={`Asset: ${workflowState.assetClass}`} color=\"primary\" />\n        <Chip label={`Lender: ${workflowState.lenderName}`} color=\"secondary\" />\n        <Box flexGrow={1} />\n        <Button variant=\"outlined\" startIcon={<ArrowBackIcon />} onClick={() => setWorkflowState({ assetClass: '', lenderName: '', nodes: [], edges: [] })}>\n          Back to Setup\n        </Button>\n        <Button variant=\"contained\" color=\"success\" disabled={nodes.length === 0} onClick={traverseWorkflow}>Traverse & Export</Button>\n      </Box>\n\n      {/* API Sidebar */}\n      <ApiSidebar lenderName={workflowState.lenderName} />\n\n      {/* Canvas */}\n      <Box sx={{ flex: 1, mt: 8 }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          nodeTypes={nodeTypes}\n          fitView\n          connectionLineType={ConnectionLineType.SmoothStep}\n          onDrop={(evt) => {\n            evt.preventDefault();\n            const data = evt.dataTransfer.getData('application/reactflow');\n            if (data) handleApiDrop(data);\n          }}\n          onDragOver={(evt) => {\n            evt.preventDefault();\n            evt.dataTransfer.dropEffect = 'move';\n          }}\n        >\n          <Controls />\n          <Background gap={20} size={1} variant={BackgroundVariant.Dots} />\n        </ReactFlow>\n      </Box>\n\n      {/* Jobs / Task List */}\n      <JobsPanel onNodeAdd={handleApiDrop} onTaskSelect={handleTaskSelect} />\n\n      {/* Modal for selecting API response edge */}\n      <ResponseSelectorModal\n        open={isResponseModalOpen}\n        onClose={() => {\n          setIsResponseModalOpen(false);\n          setPendingConnection(null);\n        }}\n        onSelect={handleResponseSelection}\n        sourceNodeId={pendingConnection?.source ?? ''}\n      />\n    </Box>\n  );\n};\n\nexport default WorkflowBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}