{"ast":null,"code":"import React from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,List,ListItem,ListItemButton,ListItemText,Typography,Box,Chip}from'@mui/material';import{DUMMY_APIS}from'../constants';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ResponseSelectorModal=_ref=>{let{open,onClose,onSelect,sourceNodeId}=_ref;// Find the API associated with the source node\n// For now, we'll use the first API as an example\nconst sourceApi=DUMMY_APIS[0];// This should be dynamically determined based on sourceNodeId\nif(!sourceApi){return null;}return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Select Response from \",sourceApi.name]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Choose which response should trigger the next API in the workflow\"})]}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Available Responses:\"})}),/*#__PURE__*/_jsx(List,{children:sourceApi.responses.map(response=>/*#__PURE__*/_jsx(ListItem,{disablePadding:true,children:/*#__PURE__*/_jsx(ListItemButton,{onClick:()=>onSelect(response.id),sx:{border:'1px solid #e0e0e0',borderRadius:1,mb:1,'&:hover':{borderColor:'#1976d2',backgroundColor:'#f8f9ff'}},children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:'bold'},children:response.name}),/*#__PURE__*/_jsx(Chip,{label:\"Response\",size:\"small\",color:\"primary\",variant:\"outlined\"})]}),secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:1},children:response.description}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[\"Sample Data: \",JSON.stringify(response.data,null,2)]})]})})})},response.id))})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"})})]});};export default ResponseSelectorModal;","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","List","ListItem","ListItemButton","ListItemText","Typography","Box","Chip","DUMMY_APIS","jsxs","_jsxs","jsx","_jsx","ResponseSelectorModal","_ref","open","onClose","onSelect","sourceNodeId","sourceApi","maxWidth","fullWidth","children","variant","name","color","sx","mb","gutterBottom","responses","map","response","disablePadding","onClick","id","border","borderRadius","borderColor","backgroundColor","primary","display","alignItems","gap","fontWeight","label","size","secondary","description","JSON","stringify","data"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ResponseSelectorModal.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Typography,\n  Box,\n  Chip,\n} from '@mui/material';\nimport { DUMMY_APIS } from '../constants';\n\ninterface ResponseSelectorModalProps {\n  open: boolean;\n  onClose: () => void;\n  onSelect: (responseId: string) => void;\n  sourceNodeId: string;\n}\n\nconst ResponseSelectorModal: React.FC<ResponseSelectorModalProps> = ({\n  open,\n  onClose,\n  onSelect,\n  sourceNodeId,\n}) => {\n  // Find the API associated with the source node\n  // For now, we'll use the first API as an example\n  const sourceApi = DUMMY_APIS[0]; // This should be dynamically determined based on sourceNodeId\n\n  if (!sourceApi) {\n    return null;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        <Typography variant=\"h6\">\n          Select Response from {sourceApi.name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Choose which response should trigger the next API in the workflow\n        </Typography>\n      </DialogTitle>\n      \n      <DialogContent>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Available Responses:\n          </Typography>\n        </Box>\n        \n        <List>\n          {sourceApi.responses.map((response) => (\n            <ListItem key={response.id} disablePadding>\n              <ListItemButton\n                onClick={() => onSelect(response.id)}\n                sx={{\n                  border: '1px solid #e0e0e0',\n                  borderRadius: 1,\n                  mb: 1,\n                  '&:hover': {\n                    borderColor: '#1976d2',\n                    backgroundColor: '#f8f9ff',\n                  },\n                }}\n              >\n                <ListItemText\n                  primary={\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                        {response.name}\n                      </Typography>\n                      <Chip \n                        label=\"Response\" \n                        size=\"small\" \n                        color=\"primary\" \n                        variant=\"outlined\" \n                      />\n                    </Box>\n                  }\n                  secondary={\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        {response.description}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Sample Data: {JSON.stringify(response.data, null, 2)}\n                      </Typography>\n                    </Box>\n                  }\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ResponseSelectorModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}