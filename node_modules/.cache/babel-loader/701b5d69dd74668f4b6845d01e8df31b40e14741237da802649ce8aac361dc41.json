{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/TaskNode.tsx\";\nimport React, { memo } from 'react';\nimport { Handle, Position } from 'reactflow';\nimport { Box, Typography, Paper } from '@mui/material';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Custom node component for Task nodes\nconst TaskNode = ({\n  data\n}) => {\n  const task = data.task;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      padding: 2,\n      borderRadius: 2,\n      minWidth: 200,\n      backgroundColor: '#f0f7ff',\n      border: '2px solid #1976d2',\n      '&:hover': {\n        boxShadow: 3\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      id: \"right\",\n      style: {\n        background: '#4CAF50',\n        width: '12px',\n        height: '12px',\n        border: '2px solid #2E7D32'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1,\n        mb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(AssignmentIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        fontWeight: \"bold\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskNode;\nexport default _c2 = /*#__PURE__*/memo(TaskNode);\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskNode\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Handle","Position","Box","Typography","Paper","AssignmentIcon","jsxDEV","_jsxDEV","TaskNode","data","task","elevation","sx","padding","borderRadius","minWidth","backgroundColor","border","boxShadow","children","type","position","Right","id","style","background","width","height","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","mb","color","variant","fontWeight","name","description","_c","_c2","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/TaskNode.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Handle, Position, NodeProps } from 'reactflow';\nimport { Box, Typography, Paper } from '@mui/material';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { Task } from '../types';\n\n// Custom node component for Task nodes\nconst TaskNode = ({ data }: NodeProps) => {\n  const task = data.task as Task;\n  \n  return (\n    <Paper \n      elevation={2}\n      sx={{\n        padding: 2,\n        borderRadius: 2,\n        minWidth: 200,\n        backgroundColor: '#f0f7ff',\n        border: '2px solid #1976d2',\n        '&:hover': {\n          boxShadow: 3,\n        }\n      }}\n    >\n      {/* Source handle for outgoing connections - only on the right side */}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id=\"right\"\n        style={{ background: '#4CAF50', width: '12px', height: '12px', border: '2px solid #2E7D32' }}\n      />\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n        <AssignmentIcon color=\"primary\" />\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n          {task.name}\n        </Typography>\n      </Box>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {task.description}\n      </Typography>\n      \n      {/* No target handle - tasks cannot have incoming connections */}\n    </Paper>\n  );\n};\n\nexport default memo(TaskNode);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,MAAM,EAAEC,QAAQ,QAAmB,WAAW;AACvD,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AACtD,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EACxC,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAY;EAE9B,oBACEH,OAAA,CAACH,KAAK;IACJO,SAAS,EAAE,CAAE;IACbC,EAAE,EAAE;MACFC,OAAO,EAAE,CAAC;MACVC,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE,SAAS;MAC1BC,MAAM,EAAE,mBAAmB;MAC3B,SAAS,EAAE;QACTC,SAAS,EAAE;MACb;IACF,CAAE;IAAAC,QAAA,gBAGFZ,OAAA,CAACP,MAAM;MACLoB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAEpB,QAAQ,CAACqB,KAAM;MACzBC,EAAE,EAAC,OAAO;MACVC,KAAK,EAAE;QAAEC,UAAU,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEV,MAAM,EAAE;MAAoB;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC,eAEFxB,OAAA,CAACL,GAAG;MAACU,EAAE,EAAE;QAAEoB,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAhB,QAAA,gBAChEZ,OAAA,CAACF,cAAc;QAAC+B,KAAK,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCxB,OAAA,CAACJ,UAAU;QAACkC,OAAO,EAAC,WAAW;QAACC,UAAU,EAAC,MAAM;QAAAnB,QAAA,EAC9CT,IAAI,CAAC6B;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENxB,OAAA,CAACJ,UAAU;MAACkC,OAAO,EAAC,OAAO;MAACD,KAAK,EAAC,gBAAgB;MAAAjB,QAAA,EAC/CT,IAAI,CAAC8B;IAAW;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAEZ,CAAC;AAACU,EAAA,GAvCIjC,QAAQ;AAyCd,eAAAkC,GAAA,gBAAe3C,IAAI,CAACS,QAAQ,CAAC;AAAC,IAAAiC,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}