{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/JobsPanel.tsx\";\nimport React from 'react';\nimport { Box, Typography, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemText, Chip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { JOBS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPanel = ({\n  onNodeAdd,\n  onTaskSelect\n}) => {\n  // Function to handle task selection\n  const handleTaskSelect = task => {\n    // Play a click sound when a task is selected\n    const audio = new Audio('/click.mp3');\n    audio.play().catch(e => console.log('Audio play failed:', e));\n\n    // Call the parent component's onTaskSelect callback\n    onTaskSelect(task);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 350,\n      height: '100vh',\n      backgroundColor: 'white',\n      borderLeft: '1px solid #e0e0e0',\n      overflow: 'auto',\n      pt: 8 // Account for header\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Workflow Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: \"Drop APIs onto tasks to create workflow steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), JOBS.map((job, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultExpanded: index === 0,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 43\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: job.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: job.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: job.tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                border: '2px dashed #e0e0e0',\n                borderRadius: 1,\n                mb: 1,\n                minHeight: 60,\n                '&:hover': {\n                  borderColor: '#1976d2',\n                  backgroundColor: '#f8f9ff'\n                }\n              },\n              onDrop: e => handleTaskDrop(e, task.id),\n              onDragOver: handleDragOver,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontWeight: 'medium'\n                    },\n                    children: task.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"Drop Zone\",\n                    size: \"small\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this),\n                secondary: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = JobsPanel;\nexport default JobsPanel;\nvar _c;\n$RefreshReg$(_c, \"JobsPanel\");","map":{"version":3,"names":["React","Box","Typography","Accordion","AccordionSummary","AccordionDetails","List","ListItem","ListItemText","Chip","ExpandMoreIcon","JOBS","jsxDEV","_jsxDEV","JobsPanel","onNodeAdd","onTaskSelect","handleTaskSelect","task","audio","Audio","play","catch","e","console","log","sx","width","height","backgroundColor","borderLeft","overflow","pt","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","map","job","index","defaultExpanded","expandIcon","fontWeight","name","description","dense","tasks","border","borderRadius","minHeight","borderColor","onDrop","handleTaskDrop","id","onDragOver","handleDragOver","primary","display","alignItems","gap","label","size","secondary","_c","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/JobsPanel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  Button,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AddIcon from '@mui/icons-material/Add';\nimport { JOBS } from '../constants';\nimport { WorkflowNode, Task } from '../types';\n\ninterface JobsPanelProps {\n  onNodeAdd: (node: WorkflowNode) => void;\n  onTaskSelect: (task: Task) => void;\n}\n\nconst JobsPanel: React.FC<JobsPanelProps> = ({ onNodeAdd, onTaskSelect }) => {\n  // Function to handle task selection\n  const handleTaskSelect = (task: Task) => {\n    // Play a click sound when a task is selected\n    const audio = new Audio('/click.mp3');\n    audio.play().catch(e => console.log('Audio play failed:', e));\n    \n    // Call the parent component's onTaskSelect callback\n    onTaskSelect(task);\n  };\n\n  return (\n    <Box\n      sx={{\n        width: 350,\n        height: '100vh',\n        backgroundColor: 'white',\n        borderLeft: '1px solid #e0e0e0',\n        overflow: 'auto',\n        pt: 8, // Account for header\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Workflow Jobs\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Drop APIs onto tasks to create workflow steps\n        </Typography>\n\n        {JOBS.map((job, index) => (\n          <Accordion key={job.id} defaultExpanded={index === 0}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Box>\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                  {job.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {job.description}\n                </Typography>\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List dense>\n                {job.tasks.map((task) => (\n                  <ListItem\n                    key={task.id}\n                    sx={{\n                      border: '2px dashed #e0e0e0',\n                      borderRadius: 1,\n                      mb: 1,\n                      minHeight: 60,\n                      '&:hover': {\n                        borderColor: '#1976d2',\n                        backgroundColor: '#f8f9ff',\n                      },\n                    }}\n                    onDrop={(e) => handleTaskDrop(e, task.id)}\n                    onDragOver={handleDragOver}\n                  >\n                    <ListItemText\n                      primary={\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                            {task.name}\n                          </Typography>\n                          <Chip label=\"Drop Zone\" size=\"small\" variant=\"outlined\" />\n                        </Box>\n                      }\n                      secondary={task.description}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JobsPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}