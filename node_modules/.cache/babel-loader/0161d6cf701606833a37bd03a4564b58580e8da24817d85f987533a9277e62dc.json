{"ast":null,"code":"import React from'react';import{Box,Typography,Accordion,AccordionSummary,AccordionDetails,List,ListItem,ListItemText}from'@mui/material';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import{JOBS}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobsPanel=_ref=>{let{onNodeAdd,onTaskSelect}=_ref;// Function to handle task selection\nconst handleTaskSelect=task=>{// Play a click sound when a task is selected\nconst audio=new Audio('/sounds/click.mp3');audio.play().catch(e=>console.log('Audio play failed:',e));// Call the parent component's onTaskSelect callback\nonTaskSelect(task);};return/*#__PURE__*/_jsx(Box,{sx:{width:350,height:'100vh',backgroundColor:'white',borderLeft:'1px solid #e0e0e0',overflow:'auto',pt:8// Account for header\n},children:/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Workflow Jobs\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:\"Drop APIs onto tasks to create workflow steps\"}),JOBS.map((job,index)=>/*#__PURE__*/_jsxs(Accordion,{defaultExpanded:index===0,children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:'bold'},children:job.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:job.description})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(List,{dense:true,children:job.tasks.map(task=>/*#__PURE__*/_jsx(ListItem,{onClick:()=>handleTaskSelect(task),sx:{border:'1px solid #e0e0e0',borderRadius:1,mb:1,minHeight:60,display:'flex',justifyContent:'space-between',alignItems:'center',padding:2,cursor:'pointer',transition:'all 0.2s ease','&:hover':{backgroundColor:'#f0f7ff',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)',transform:'translateY(-2px)'}},children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'medium'},children:task.name}),secondary:task.description})},task.id))})})]},job.id))]})});};export default JobsPanel;","map":{"version":3,"names":["React","Box","Typography","Accordion","AccordionSummary","AccordionDetails","List","ListItem","ListItemText","ExpandMoreIcon","JOBS","jsx","_jsx","jsxs","_jsxs","JobsPanel","_ref","onNodeAdd","onTaskSelect","handleTaskSelect","task","audio","Audio","play","catch","e","console","log","sx","width","height","backgroundColor","borderLeft","overflow","pt","children","p","variant","gutterBottom","color","mb","map","job","index","defaultExpanded","expandIcon","fontWeight","name","description","dense","tasks","onClick","border","borderRadius","minHeight","display","justifyContent","alignItems","padding","cursor","transition","boxShadow","transform","primary","secondary","id"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/JobsPanel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  Button,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport AddIcon from '@mui/icons-material/Add';\nimport { JOBS } from '../constants';\nimport { WorkflowNode, Task } from '../types';\n\ninterface JobsPanelProps {\n  onNodeAdd: (node: WorkflowNode) => void;\n  onTaskSelect: (task: Task) => void;\n}\n\nconst JobsPanel: React.FC<JobsPanelProps> = ({ onNodeAdd, onTaskSelect }) => {\n  // Function to handle task selection\n  const handleTaskSelect = (task: Task) => {\n    // Play a click sound when a task is selected\n    const audio = new Audio('/sounds/click.mp3');\n    audio.play().catch(e => console.log('Audio play failed:', e));\n    \n    // Call the parent component's onTaskSelect callback\n    onTaskSelect(task);\n  };\n\n  return (\n    <Box\n      sx={{\n        width: 350,\n        height: '100vh',\n        backgroundColor: 'white',\n        borderLeft: '1px solid #e0e0e0',\n        overflow: 'auto',\n        pt: 8, // Account for header\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Workflow Jobs\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Drop APIs onto tasks to create workflow steps\n        </Typography>\n\n        {JOBS.map((job, index) => (\n          <Accordion key={job.id} defaultExpanded={index === 0}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Box>\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                  {job.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {job.description}\n                </Typography>\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List dense>\n                {job.tasks.map((task) => (\n                  <ListItem\n                    key={task.id}\n                    onClick={() => handleTaskSelect(task)}\n                    sx={{\n                      border: '1px solid #e0e0e0',\n                      borderRadius: 1,\n                      mb: 1,\n                      minHeight: 60,\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      padding: 2,\n                      cursor: 'pointer',\n                      transition: 'all 0.2s ease',\n                      '&:hover': {\n                        backgroundColor: '#f0f7ff',\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                        transform: 'translateY(-2px)',\n                      },\n                    }}\n                  >\n                    <ListItemText\n                      primary={\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                          {task.name}\n                        </Typography>\n                      }\n                      secondary={task.description}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default JobsPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}