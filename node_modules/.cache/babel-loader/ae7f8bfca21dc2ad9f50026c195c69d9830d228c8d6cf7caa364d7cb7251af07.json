{"ast":null,"code":"import React,{useCallback,useEffect,useMemo,useRef,useState}from'react';import ReactFlow,{addEdge,Background,BackgroundVariant,Controls,useEdgesState,useNodesState,ConnectionLineType}from'reactflow';import'reactflow/dist/style.css';import{Box,Button,Chip,Typography}from'@mui/material';import ArrowBackIcon from'@mui/icons-material/ArrowBack';import ApiSidebar from'./ApiSidebar';import JobsPanel from'./JobsPanel';import ResponseSelectorModal from'./ResponseSelectorModal';import TaskNode from'./TaskNode';import ApiNode from'./ApiNode';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/* -------------------------------------------------------------------------- *//*                         Helper / internal type guards                      *//* -------------------------------------------------------------------------- */const isApiNode=n=>{var _n$data;return n.type==='api'||((_n$data=n.data)===null||_n$data===void 0?void 0:_n$data.isApi);};const isTaskNode=n=>{var _n$data2;return n.type==='task'||((_n$data2=n.data)===null||_n$data2===void 0?void 0:_n$data2.isTask);};/* -------------------------------------------------------------------------- *//*                              React Component                                *//* -------------------------------------------------------------------------- */const WorkflowBuilder=_ref=>{var _pendingConnection$so;let{workflowState,setWorkflowState}=_ref;/* ------------------------------ react-flow ------------------------------ */const[nodes,setNodes,onNodesChange]=useNodesState([]);const[edges,setEdges,onEdgesChange]=useEdgesState([]);const nodeTypes=useMemo(()=>({task:TaskNode,api:ApiNode}),[]);/* ------------------------------ UI State ------------------------------- */const[isResponseModalOpen,setIsResponseModalOpen]=useState(false);const[pendingConnection,setPendingConnection]=useState(null);const[selectedTask,setSelectedTask]=useState(null);/* ----------------------------- Sound refs ------------------------------ */const clickSoundRef=useRef(null);const dropSoundRef=useRef(null);const connectSoundRef=useRef(null);useEffect(()=>{clickSoundRef.current=new Audio('/sounds/click.mp3');dropSoundRef.current=new Audio('/sounds/drop.mp3');connectSoundRef.current=new Audio('/sounds/connect.mp3');},[]);/* ----------------------------- Helpers --------------------------------- */const play=ref=>{var _ref$current;(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.play().catch(()=>{/* ignore */});};/* --------------------------- Drag-and-drop ----------------------------- */const handleTaskSelect=useCallback(task=>{play(clickSoundRef);const taskNode={id:`task-${task.id}-${Date.now()}`,type:'task',position:{x:100,y:100+nodes.length*40},data:{label:task.name,task,isTask:true}};setNodes(ns=>[...ns,taskNode]);},[nodes]);const handleApiDrop=useCallback(raw=>{var _data,_data$api;play(dropSoundRef);let data=typeof raw==='string'?JSON.parse(raw):raw;if((_data=data)!==null&&_data!==void 0&&_data.data)data={...data,...data.data};const apiNode={id:`api-${Date.now()}`,type:'api',position:data.position||{x:300,y:200},data:{...data,isApi:true,label:data.label||((_data$api=data.api)===null||_data$api===void 0?void 0:_data$api.name)||'API'}};setNodes(ns=>[...ns,apiNode]);},[]);/* -------------------------- Connection Logic --------------------------- */const isValidConnection=useCallback(conn=>{const s=nodes.find(n=>n.id===conn.source);const t=nodes.find(n=>n.id===conn.target);if(!s||!t)return false;// Allow task→api or api→api\nif(isTaskNode(s)&&isApiNode(t))return true;if(isApiNode(s)&&isApiNode(t))return true;return false;},[nodes]);const onConnect=useCallback(params=>{if(!isValidConnection(params))return;const sNode=nodes.find(n=>n.id===params.source);const tNode=nodes.find(n=>n.id===params.target);// For api→api ask response mapping, else create directly\nif(sNode&&tNode&&isApiNode(sNode)&&isApiNode(tNode)){setPendingConnection(params);setIsResponseModalOpen(true);}else{setEdges(es=>addEdge({...params,animated:true},es));play(connectSoundRef);}},[nodes]);const handleResponseSelection=useCallback(responseId=>{if(pendingConnection){setEdges(es=>addEdge({...pendingConnection,id:`edge-${Date.now()}`,data:{responseId},animated:true},es));play(connectSoundRef);}setPendingConnection(null);setIsResponseModalOpen(false);},[pendingConnection]);/* -------------------------- Traverse / export -------------------------- */const traverseWorkflow=useCallback(()=>{// order by layout (x) then (y)\nconst apiNodes=nodes.filter(isApiNode).sort((a,b)=>a.position.x-b.position.x||a.position.y-b.position.y);const items=apiNodes.map((n,idx)=>{var _n$data3;// incoming from task → event group\nconst incoming=edges.filter(e=>e.target===n.id);let eventGroup=null;incoming.forEach(e=>{var _src$data$label,_src$data;const src=nodes.find(no=>no.id===e.source);if(src&&isTaskNode(src))eventGroup=(_src$data$label=(_src$data=src.data)===null||_src$data===void 0?void 0:_src$data.label)!==null&&_src$data$label!==void 0?_src$data$label:null;});// outgoing api→api success targets (first 3)\nconst outgoing=edges.filter(e=>e.source===n.id).slice(0,3);const successTargets=outgoing.map(e=>{var _tgt$data,_tgt$data2,_tgt$data2$api;const tgt=nodes.find(no=>no.id===e.target);return(tgt===null||tgt===void 0?void 0:(_tgt$data=tgt.data)===null||_tgt$data===void 0?void 0:_tgt$data.label)||(tgt===null||tgt===void 0?void 0:(_tgt$data2=tgt.data)===null||_tgt$data2===void 0?void 0:(_tgt$data2$api=_tgt$data2.api)===null||_tgt$data2$api===void 0?void 0:_tgt$data2$api.name)||(tgt===null||tgt===void 0?void 0:tgt.id);});return{id:String(idx+1),investor_name:workflowState.lenderName.toLowerCase(),api_name:((_n$data3=n.data)===null||_n$data3===void 0?void 0:_n$data3.label)||`api_${idx+1}`,order:idx+1,event_group:eventGroup,action_on_success_1:successTargets[0]?[successTargets[0]]:[],action_on_success_2:successTargets[1]?[successTargets[1]]:[],action_on_success_3:successTargets[2]?[successTargets[2]]:[]};});const jsonStr=JSON.stringify(items,null,2);const blob=new Blob([jsonStr],{type:'application/json'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`${workflowState.lenderName}_workflow.json`;a.click();URL.revokeObjectURL(url);},[nodes,edges,workflowState]);/* ---------------------------- Render ---------------------------------- */return/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',display:'flex'},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:0,left:0,right:0,p:2,display:'flex',gap:2,alignItems:'center',zIndex:1000,bgcolor:'white',borderBottom:'1px solid #e0e0e0'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"LSS Workflow Builder\"}),/*#__PURE__*/_jsx(Chip,{label:`Asset: ${workflowState.assetClass}`,color:\"primary\"}),/*#__PURE__*/_jsx(Chip,{label:`Lender: ${workflowState.lenderName}`,color:\"secondary\"}),/*#__PURE__*/_jsx(Box,{flexGrow:1}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>setWorkflowState({assetClass:'',lenderName:'',nodes:[],edges:[]}),children:\"Back to Setup\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",disabled:nodes.length===0,onClick:traverseWorkflow,children:\"Traverse & Export\"})]}),/*#__PURE__*/_jsx(ApiSidebar,{lenderName:workflowState.lenderName}),/*#__PURE__*/_jsx(Box,{sx:{flex:1,mt:8},children:/*#__PURE__*/_jsxs(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect,nodeTypes:nodeTypes,fitView:true,connectionLineType:ConnectionLineType.SmoothStep,onDrop:evt=>{evt.preventDefault();const data=evt.dataTransfer.getData('application/reactflow');if(data)handleApiDrop(data);},onDragOver:evt=>{evt.preventDefault();evt.dataTransfer.dropEffect='move';},children:[/*#__PURE__*/_jsx(Controls,{}),/*#__PURE__*/_jsx(Background,{gap:20,size:1,variant:BackgroundVariant.Dots})]})}),/*#__PURE__*/_jsx(JobsPanel,{onNodeAdd:handleApiDrop,onTaskSelect:handleTaskSelect}),/*#__PURE__*/_jsx(ResponseSelectorModal,{open:isResponseModalOpen,onClose:()=>{setIsResponseModalOpen(false);setPendingConnection(null);},onSelect:handleResponseSelection,sourceNodeId:(_pendingConnection$so=pendingConnection===null||pendingConnection===void 0?void 0:pendingConnection.source)!==null&&_pendingConnection$so!==void 0?_pendingConnection$so:''})]});};export default WorkflowBuilder;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","addEdge","Background","BackgroundVariant","Controls","useEdgesState","useNodesState","ConnectionLineType","Box","Button","Chip","Typography","ArrowBackIcon","ApiSidebar","JobsPanel","ResponseSelectorModal","TaskNode","ApiNode","jsx","_jsx","jsxs","_jsxs","isApiNode","n","_n$data","type","data","isApi","isTaskNode","_n$data2","isTask","WorkflowBuilder","_ref","_pendingConnection$so","workflowState","setWorkflowState","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeTypes","task","api","isResponseModalOpen","setIsResponseModalOpen","pendingConnection","setPendingConnection","selectedTask","setSelectedTask","clickSoundRef","dropSoundRef","connectSoundRef","current","Audio","play","ref","_ref$current","catch","handleTaskSelect","taskNode","id","Date","now","position","x","y","length","label","name","ns","handleApiDrop","raw","_data","_data$api","JSON","parse","apiNode","isValidConnection","conn","s","find","source","t","target","onConnect","params","sNode","tNode","es","animated","handleResponseSelection","responseId","traverseWorkflow","apiNodes","filter","sort","a","b","items","map","idx","_n$data3","incoming","e","eventGroup","forEach","_src$data$label","_src$data","src","no","outgoing","slice","successTargets","_tgt$data","_tgt$data2","_tgt$data2$api","tgt","String","investor_name","lenderName","toLowerCase","api_name","order","event_group","action_on_success_1","action_on_success_2","action_on_success_3","jsonStr","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","sx","height","display","children","top","left","right","p","gap","alignItems","zIndex","bgcolor","borderBottom","variant","assetClass","color","flexGrow","startIcon","onClick","disabled","flex","mt","fitView","connectionLineType","SmoothStep","onDrop","evt","preventDefault","dataTransfer","getData","onDragOver","dropEffect","size","Dots","onNodeAdd","onTaskSelect","open","onClose","onSelect","sourceNodeId"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/WorkflowBuilder.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  BackgroundVariant,\n  Connection,\n  Controls,\n  Edge,\n  Node,\n  NodeTypes,\n  useEdgesState,\n  useNodesState,\n  NodeMouseHandler,\n  ConnectionLineType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport {\n  Box,\n  Button,\n  Chip,\n  Typography,\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nimport { WorkflowState, Task } from '../types';\nimport ApiSidebar from './ApiSidebar';\nimport JobsPanel from './JobsPanel';\nimport ResponseSelectorModal from './ResponseSelectorModal';\nimport TaskNode from './TaskNode';\nimport ApiNode from './ApiNode';\n\ninterface WorkflowBuilderProps {\n  workflowState: WorkflowState;\n  setWorkflowState: React.Dispatch<React.SetStateAction<WorkflowState>>;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                         Helper / internal type guards                      */\n/* -------------------------------------------------------------------------- */\n\nconst isApiNode = (n: Node<any>): boolean => n.type === 'api' || n.data?.isApi;\nconst isTaskNode = (n: Node<any>): boolean => n.type === 'task' || n.data?.isTask;\n\n/* -------------------------------------------------------------------------- */\n/*                              React Component                                */\n/* -------------------------------------------------------------------------- */\n\nconst WorkflowBuilder: React.FC<WorkflowBuilderProps> = ({ workflowState, setWorkflowState }) => {\n  /* ------------------------------ react-flow ------------------------------ */\n  const [nodes, setNodes, onNodesChange] = useNodesState<Node[]>([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState<Edge[]>([]);\n\n  const nodeTypes: NodeTypes = useMemo(() => ({ task: TaskNode, api: ApiNode }), []);\n\n  /* ------------------------------ UI State ------------------------------- */\n  const [isResponseModalOpen, setIsResponseModalOpen] = useState(false);\n  const [pendingConnection, setPendingConnection] = useState<Connection | null>(null);\n\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n\n  /* ----------------------------- Sound refs ------------------------------ */\n  const clickSoundRef = useRef<HTMLAudioElement | null>(null);\n  const dropSoundRef = useRef<HTMLAudioElement | null>(null);\n  const connectSoundRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    clickSoundRef.current = new Audio('/sounds/click.mp3');\n    dropSoundRef.current = new Audio('/sounds/drop.mp3');\n    connectSoundRef.current = new Audio('/sounds/connect.mp3');\n  }, []);\n\n  /* ----------------------------- Helpers --------------------------------- */\n  const play = (ref: React.RefObject<HTMLAudioElement>) => {\n    ref.current?.play().catch(() => {/* ignore */});\n  };\n\n  /* --------------------------- Drag-and-drop ----------------------------- */\n  const handleTaskSelect = useCallback((task: Task) => {\n    play(clickSoundRef);\n\n    const taskNode: Node = {\n      id: `task-${task.id}-${Date.now()}`,\n      type: 'task',\n      position: { x: 100, y: 100 + (nodes.length * 40) },\n      data: {\n        label: task.name,\n        task,\n        isTask: true,\n      },\n    };\n    setNodes((ns) => [...ns, taskNode]);\n  }, [nodes]);\n\n  const handleApiDrop = useCallback((raw: any) => {\n    play(dropSoundRef);\n\n    let data = typeof raw === 'string' ? JSON.parse(raw) : raw;\n    if (data?.data) data = { ...data, ...data.data };\n\n    const apiNode: Node = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      position: data.position || { x: 300, y: 200 },\n      data: {\n        ...data,\n        isApi: true,\n        label: data.label || data.api?.name || 'API',\n      },\n    };\n    setNodes((ns) => [...ns, apiNode]);\n  }, []);\n\n  /* -------------------------- Connection Logic --------------------------- */\n  const isValidConnection = useCallback((conn: Connection) => {\n    const s = nodes.find((n) => n.id === conn.source);\n    const t = nodes.find((n) => n.id === conn.target);\n    if (!s || !t) return false;\n    // Allow task→api or api→api\n    if (isTaskNode(s) && isApiNode(t)) return true;\n    if (isApiNode(s) && isApiNode(t)) return true;\n    return false;\n  }, [nodes]);\n\n  const onConnect = useCallback((params: Connection) => {\n    if (!isValidConnection(params)) return;\n\n    const sNode = nodes.find((n) => n.id === params.source);\n    const tNode = nodes.find((n) => n.id === params.target);\n\n    // For api→api ask response mapping, else create directly\n    if (sNode && tNode && isApiNode(sNode) && isApiNode(tNode)) {\n      setPendingConnection(params);\n      setIsResponseModalOpen(true);\n    } else {\n      setEdges((es) => addEdge({ ...params, animated: true }, es));\n      play(connectSoundRef);\n    }\n  }, [nodes]);\n\n  const handleResponseSelection = useCallback((responseId: string) => {\n    if (pendingConnection) {\n      setEdges((es) => addEdge({ ...pendingConnection, id: `edge-${Date.now()}`, data: { responseId }, animated: true }, es));\n      play(connectSoundRef);\n    }\n    setPendingConnection(null);\n    setIsResponseModalOpen(false);\n  }, [pendingConnection]);\n\n  /* -------------------------- Traverse / export -------------------------- */\n  type ExportItem = {\n    id: string;\n    investor_name: string;\n    api_name: string;\n    order: number;\n    event_group: string | null;\n    action_on_success_1: string[];\n    action_on_success_2: string[];\n    action_on_success_3: string[];\n    // plus many static fields… keeping minimal for brevity\n  };\n\n  const traverseWorkflow = useCallback(() => {\n    // order by layout (x) then (y)\n    const apiNodes = nodes.filter(isApiNode).sort((a, b) => (a.position.x - b.position.x) || (a.position.y - b.position.y));\n\n    const items: ExportItem[] = apiNodes.map((n, idx) => {\n      // incoming from task → event group\n      const incoming = edges.filter((e) => e.target === n.id);\n      let eventGroup: string | null = null;\n      incoming.forEach((e) => {\n        const src = nodes.find((no) => no.id === e.source);\n        if (src && isTaskNode(src)) eventGroup = src.data?.label ?? null;\n      });\n\n      // outgoing api→api success targets (first 3)\n      const outgoing = edges.filter((e) => e.source === n.id).slice(0, 3);\n      const successTargets = outgoing.map((e) => {\n        const tgt = nodes.find((no) => no.id === e.target);\n        return tgt?.data?.label || tgt?.data?.api?.name || tgt?.id;\n      });\n\n      return {\n        id: String(idx + 1),\n        investor_name: workflowState.lenderName.toLowerCase(),\n        api_name: n.data?.label || `api_${idx + 1}`,\n        order: idx + 1,\n        event_group: eventGroup,\n        action_on_success_1: successTargets[0] ? [successTargets[0]] : [],\n        action_on_success_2: successTargets[1] ? [successTargets[1]] : [],\n        action_on_success_3: successTargets[2] ? [successTargets[2]] : [],\n      };\n    });\n\n    const jsonStr = JSON.stringify(items, null, 2);\n    const blob = new Blob([jsonStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${workflowState.lenderName}_workflow.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [nodes, edges, workflowState]);\n\n  /* ---------------------------- Render ---------------------------------- */\n  return (\n    <Box sx={{ height: '100vh', display: 'flex' }}>\n      {/* Header */}\n      <Box sx={{ position: 'absolute', top: 0, left: 0, right: 0, p: 2, display: 'flex', gap: 2, alignItems: 'center', zIndex: 1000, bgcolor: 'white', borderBottom: '1px solid #e0e0e0' }}>\n        <Typography variant=\"h6\">LSS Workflow Builder</Typography>\n        <Chip label={`Asset: ${workflowState.assetClass}`} color=\"primary\" />\n        <Chip label={`Lender: ${workflowState.lenderName}`} color=\"secondary\" />\n        <Box flexGrow={1} />\n        <Button variant=\"outlined\" startIcon={<ArrowBackIcon />} onClick={() => setWorkflowState({ assetClass: '', lenderName: '', nodes: [], edges: [] })}>\n          Back to Setup\n        </Button>\n        <Button variant=\"contained\" color=\"success\" disabled={nodes.length === 0} onClick={traverseWorkflow}>Traverse & Export</Button>\n      </Box>\n\n      {/* API Sidebar */}\n      <ApiSidebar lenderName={workflowState.lenderName} />\n\n      {/* Canvas */}\n      <Box sx={{ flex: 1, mt: 8 }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          nodeTypes={nodeTypes}\n          fitView\n          connectionLineType={ConnectionLineType.SmoothStep}\n          onDrop={(evt) => {\n            evt.preventDefault();\n            const data = evt.dataTransfer.getData('application/reactflow');\n            if (data) handleApiDrop(data);\n          }}\n          onDragOver={(evt) => {\n            evt.preventDefault();\n            evt.dataTransfer.dropEffect = 'move';\n          }}\n        >\n          <Controls />\n          <Background gap={20} size={1} variant={BackgroundVariant.Dots} />\n        </ReactFlow>\n      </Box>\n\n      {/* Jobs / Task List */}\n      <JobsPanel onNodeAdd={handleApiDrop} onTaskSelect={handleTaskSelect} />\n\n      {/* Modal for selecting API response edge */}\n      <ResponseSelectorModal\n        open={isResponseModalOpen}\n        onClose={() => {\n          setIsResponseModalOpen(false);\n          setPendingConnection(null);\n        }}\n        onSelect={handleResponseSelection}\n        sourceNodeId={pendingConnection?.source ?? ''}\n      />\n    </Box>\n  );\n};\n\nexport default WorkflowBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}