{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiNode.tsx\";\nimport React, { memo } from 'react';\nimport { Handle, Position } from 'reactflow';\nimport { Box, Typography, Paper } from '@mui/material';\nimport ApiIcon from '@mui/icons-material/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Custom node component for API nodes\nconst ApiNode = ({\n  data\n}) => {\n  // Extract API name from data - handle different data structures\n  let apiName = '';\n  console.log('API Node data:', data);\n\n  // More aggressive extraction of API name from various possible locations\n  if (data.api && typeof data.api === 'object') {\n    if (data.api.name) {\n      apiName = data.api.name;\n      console.log('Found name in data.api.name:', apiName);\n    }\n  }\n\n  // If still no name, try other locations\n  if (!apiName && data.name) {\n    apiName = data.name;\n    console.log('Found name in data.name:', apiName);\n  }\n  if (!apiName && data.label) {\n    apiName = data.label;\n    console.log('Found name in data.label:', apiName);\n  }\n\n  // Last resort - use the node ID if it contains useful information\n  if (!apiName && data.id && typeof data.id === 'string') {\n    const idParts = data.id.split('-');\n    if (idParts.length > 1) {\n      apiName = idParts[0];\n      console.log('Extracted name from ID:', apiName);\n    }\n  }\n\n  // Get description if available\n  let apiDescription = '';\n  if (data.api && data.api.description) {\n    apiDescription = data.api.description;\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      padding: 2,\n      borderRadius: 2,\n      minWidth: 180,\n      backgroundColor: '#fff8e6',\n      border: '2px solid #f57c00',\n      '&:hover': {\n        boxShadow: 3\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      id: \"left\",\n      style: {\n        background: '#FF9800',\n        width: '12px',\n        height: '12px',\n        border: '2px solid #E65100'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"bottom\",\n      style: {\n        background: '#2196F3',\n        width: '12px',\n        height: '12px',\n        border: '2px solid #0D47A1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"top\",\n      style: {\n        background: '#2196F3',\n        width: '12px',\n        height: '12px',\n        border: '2px solid #0D47A1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1,\n        mb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(ApiIcon, {\n        color: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        fontWeight: \"bold\",\n        children: apiName || 'API Node'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), apiDescription && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      children: apiDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), data.api && data.api.responses && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"text.secondary\",\n        children: \"Responses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = ApiNode;\nexport default _c2 = /*#__PURE__*/memo(ApiNode);\nvar _c, _c2;\n$RefreshReg$(_c, \"ApiNode\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","Handle","Position","Box","Typography","Paper","ApiIcon","jsxDEV","_jsxDEV","ApiNode","data","apiName","console","log","api","name","label","id","idParts","split","length","apiDescription","description","elevation","sx","padding","borderRadius","minWidth","backgroundColor","border","boxShadow","children","type","position","Left","style","background","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Bottom","Top","display","alignItems","gap","mb","color","variant","fontWeight","responses","mt","_c","_c2","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiNode.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Handle, Position, NodeProps } from 'reactflow';\nimport { Box, Typography, Paper } from '@mui/material';\nimport ApiIcon from '@mui/icons-material/Api';\nimport { ApiNode as ApiNodeType } from '../types';\n\n// Custom node component for API nodes\nconst ApiNode = ({ data }: NodeProps) => {\n  // Extract API name from data - handle different data structures\n  let apiName = '';\n  console.log('API Node data:', data);\n  \n  // More aggressive extraction of API name from various possible locations\n  if (data.api && typeof data.api === 'object') {\n    if (data.api.name) {\n      apiName = data.api.name;\n      console.log('Found name in data.api.name:', apiName);\n    }\n  }\n  \n  // If still no name, try other locations\n  if (!apiName && data.name) {\n    apiName = data.name;\n    console.log('Found name in data.name:', apiName);\n  }\n  \n  if (!apiName && data.label) {\n    apiName = data.label;\n    console.log('Found name in data.label:', apiName);\n  }\n  \n  // Last resort - use the node ID if it contains useful information\n  if (!apiName && data.id && typeof data.id === 'string') {\n    const idParts = data.id.split('-');\n    if (idParts.length > 1) {\n      apiName = idParts[0];\n      console.log('Extracted name from ID:', apiName);\n    }\n  }\n  \n  // Get description if available\n  let apiDescription = '';\n  if (data.api && data.api.description) {\n    apiDescription = data.api.description;\n  }\n  \n  return (\n    <Paper \n      elevation={2}\n      sx={{\n        padding: 2,\n        borderRadius: 2,\n        minWidth: 180,\n        backgroundColor: '#fff8e6',\n        border: '2px solid #f57c00',\n        '&:hover': {\n          boxShadow: 3,\n        }\n      }}\n    >\n      {/* Target handle for incoming connections from tasks */}\n      <Handle\n        type=\"target\"\n        position={Position.Left}\n        id=\"left\"\n        style={{ background: '#FF9800', width: '12px', height: '12px', border: '2px solid #E65100' }}\n      />\n      \n      {/* Source/Target handles for API-to-API connections */}\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"bottom\"\n        style={{ background: '#2196F3', width: '12px', height: '12px', border: '2px solid #0D47A1' }}\n      />\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"top\"\n        style={{ background: '#2196F3', width: '12px', height: '12px', border: '2px solid #0D47A1' }}\n      />\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n        <ApiIcon color=\"warning\" />\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n          {apiName || 'API Node'}\n        </Typography>\n      </Box>\n      \n      {apiDescription && (\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {apiDescription}\n        </Typography>\n      )}\n      \n      {data.api && data.api.responses && (\n        <Box sx={{ mt: 1 }}>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Responses:\n          </Typography>\n        </Box>\n      )}\n      \n      {/* No source handle - APIs cannot have outgoing connections */}\n    </Paper>\n  );\n};\n\nexport default memo(ApiNode);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}