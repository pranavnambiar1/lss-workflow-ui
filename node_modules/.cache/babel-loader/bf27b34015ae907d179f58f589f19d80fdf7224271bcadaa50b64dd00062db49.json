{"ast":null,"code":"import React,{memo}from'react';import{Handle,Position}from'reactflow';import{Box,Typography,Paper}from'@mui/material';import ApiIcon from'@mui/icons-material/Api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Custom node component for API nodes\nconst ApiNode=_ref=>{let{data}=_ref;// Extract API name from data - handle different data structures\nlet apiName='';console.log('API Node data:',data);// More aggressive extraction of API name from various possible locations\nif(data.api&&typeof data.api==='object'){if(data.api.name){apiName=data.api.name;console.log('Found name in data.api.name:',apiName);}}// If still no name, try other locations\nif(!apiName&&data.name){apiName=data.name;console.log('Found name in data.name:',apiName);}if(!apiName&&data.label){apiName=data.label;console.log('Found name in data.label:',apiName);}// Last resort - use the node ID if it contains useful information\nif(!apiName&&data.id&&typeof data.id==='string'){const idParts=data.id.split('-');if(idParts.length>1){apiName=idParts[0];console.log('Extracted name from ID:',apiName);}}// Get description if available\nlet apiDescription='';if(data.api&&data.api.description){apiDescription=data.api.description;}return/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{padding:2,borderRadius:2,minWidth:180,backgroundColor:'#fff8e6',border:'2px solid #f57c00','&:hover':{boxShadow:3}},children:[/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Left,id:\"left\",style:{background:'#FF9800',width:'12px',height:'12px',border:'2px solid #E65100'}}),/*#__PURE__*/_jsx(Handle,{type:\"source\",position:Position.Bottom,id:\"bottom\",style:{background:'#2196F3',width:'12px',height:'12px',border:'2px solid #0D47A1'}}),/*#__PURE__*/_jsx(Handle,{type:\"target\",position:Position.Top,id:\"top\",style:{background:'#2196F3',width:'12px',height:'12px',border:'2px solid #0D47A1'}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1,mb:1},children:[/*#__PURE__*/_jsx(ApiIcon,{color:\"warning\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",fontWeight:\"bold\",children:apiName||'API Node'})]}),apiDescription&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:apiDescription}),data.api&&data.api.responses&&/*#__PURE__*/_jsx(Box,{sx:{mt:1},children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"Responses:\"})})]});};export default/*#__PURE__*/memo(ApiNode);","map":{"version":3,"names":["React","memo","Handle","Position","Box","Typography","Paper","ApiIcon","jsx","_jsx","jsxs","_jsxs","ApiNode","_ref","data","apiName","console","log","api","name","label","id","idParts","split","length","apiDescription","description","elevation","sx","padding","borderRadius","minWidth","backgroundColor","border","boxShadow","children","type","position","Left","style","background","width","height","Bottom","Top","display","alignItems","gap","mb","color","variant","fontWeight","responses","mt"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiNode.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { Handle, Position, NodeProps } from 'reactflow';\nimport { Box, Typography, Paper } from '@mui/material';\nimport ApiIcon from '@mui/icons-material/Api';\nimport { ApiNode as ApiNodeType } from '../types';\n\n// Custom node component for API nodes\nconst ApiNode = ({ data }: NodeProps) => {\n  // Extract API name from data - handle different data structures\n  let apiName = '';\n  console.log('API Node data:', data);\n  \n  // More aggressive extraction of API name from various possible locations\n  if (data.api && typeof data.api === 'object') {\n    if (data.api.name) {\n      apiName = data.api.name;\n      console.log('Found name in data.api.name:', apiName);\n    }\n  }\n  \n  // If still no name, try other locations\n  if (!apiName && data.name) {\n    apiName = data.name;\n    console.log('Found name in data.name:', apiName);\n  }\n  \n  if (!apiName && data.label) {\n    apiName = data.label;\n    console.log('Found name in data.label:', apiName);\n  }\n  \n  // Last resort - use the node ID if it contains useful information\n  if (!apiName && data.id && typeof data.id === 'string') {\n    const idParts = data.id.split('-');\n    if (idParts.length > 1) {\n      apiName = idParts[0];\n      console.log('Extracted name from ID:', apiName);\n    }\n  }\n  \n  // Get description if available\n  let apiDescription = '';\n  if (data.api && data.api.description) {\n    apiDescription = data.api.description;\n  }\n  \n  return (\n    <Paper \n      elevation={2}\n      sx={{\n        padding: 2,\n        borderRadius: 2,\n        minWidth: 180,\n        backgroundColor: '#fff8e6',\n        border: '2px solid #f57c00',\n        '&:hover': {\n          boxShadow: 3,\n        }\n      }}\n    >\n      {/* Target handle for incoming connections from tasks */}\n      <Handle\n        type=\"target\"\n        position={Position.Left}\n        id=\"left\"\n        style={{ background: '#FF9800', width: '12px', height: '12px', border: '2px solid #E65100' }}\n      />\n      \n      {/* Source/Target handles for API-to-API connections */}\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"bottom\"\n        style={{ background: '#2196F3', width: '12px', height: '12px', border: '2px solid #0D47A1' }}\n      />\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"top\"\n        style={{ background: '#2196F3', width: '12px', height: '12px', border: '2px solid #0D47A1' }}\n      />\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n        <ApiIcon color=\"warning\" />\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n          {apiName || 'API Node'}\n        </Typography>\n      </Box>\n      \n      {apiDescription && (\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {apiDescription}\n        </Typography>\n      )}\n      \n      {data.api && data.api.responses && (\n        <Box sx={{ mt: 1 }}>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Responses:\n          </Typography>\n        </Box>\n      )}\n      \n      {/* No source handle - APIs cannot have outgoing connections */}\n    </Paper>\n  );\n};\n\nexport default memo(ApiNode);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}