{"ast":null,"code":"import React from'react';import{Box,Typography,List,ListItem,ListItemText,Chip,Divider}from'@mui/material';import{DUMMY_APIS,SMFG_APIS}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ApiSidebar=_ref=>{let{lenderName}=_ref;const onDragStart=(event,api)=>{console.log('Dragging API:',api);// Enhanced logging to debug data structure\nconsole.log('API name:',api.name);console.log('API description:',api.description);console.log('API category:',api.category);console.log('API responses:',api.responses);// Store the API data as JSON in the dataTransfer with complete information\n// Use a flatter structure to avoid nesting issues\nconst apiNodeData={id:`api-${Date.now()}`,type:'api',data:{label:api.name,// Set label explicitly for display\nname:api.name,// Ensure name is set\ndescription:api.description||'',api:api,// Include the entire original API object\nisApi:true// Flag to identify as API node\n}};console.log('Serializing API node data:',apiNodeData);event.dataTransfer.setData('application/reactflow',JSON.stringify(apiNodeData));event.dataTransfer.effectAllowed='move';};// Define API type for better type safety\n// Select the appropriate API list based on the lender name\nconst apiList=lenderName==='SMFG'?SMFG_APIS:DUMMY_APIS;// Group APIs by category with proper type annotations\nconst apisByCategory=apiList.reduce((acc,api)=>{if(!acc[api.category]){acc[api.category]=[];}acc[api.category].push(api);return acc;},{});return/*#__PURE__*/_jsx(Box,{sx:{width:300,height:'100vh',backgroundColor:'white',borderRight:'1px solid #e0e0e0',overflow:'auto',pt:8// Account for header\n},children:/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Available APIs\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:\"Drag and drop APIs to create your workflow\"}),Object.entries(apisByCategory).map(_ref2=>{let[category,apis]=_ref2;return/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{mb:1,fontWeight:'bold'},children:category}),/*#__PURE__*/_jsx(List,{dense:true,children:apis.map(api=>/*#__PURE__*/_jsx(ListItem,{sx:{border:'1px solid #e0e0e0',borderRadius:1,mb:1,cursor:'grab','&:hover':{backgroundColor:'#f5f5f5',borderColor:'#1976d2'},'&:active':{cursor:'grabbing'}},draggable:true,onDragStart:e=>onDragStart(e,api),children:/*#__PURE__*/_jsx(ListItemText,{primary:api.name,secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:1},children:api.description}),api.responses&&/*#__PURE__*/_jsx(Chip,{label:`${api.responses.length} responses`,size:\"small\",variant:\"outlined\"})]})})},api.id))}),category!==Object.keys(apisByCategory)[Object.keys(apisByCategory).length-1]&&/*#__PURE__*/_jsx(Divider,{sx:{my:2}})]},category);})]})});};export default ApiSidebar;","map":{"version":3,"names":["React","Box","Typography","List","ListItem","ListItemText","Chip","Divider","DUMMY_APIS","SMFG_APIS","jsx","_jsx","jsxs","_jsxs","ApiSidebar","_ref","lenderName","onDragStart","event","api","console","log","name","description","category","responses","apiNodeData","id","Date","now","type","data","label","isApi","dataTransfer","setData","JSON","stringify","effectAllowed","apiList","apisByCategory","reduce","acc","push","sx","width","height","backgroundColor","borderRight","overflow","pt","children","p","variant","gutterBottom","color","mb","Object","entries","map","_ref2","apis","fontWeight","dense","border","borderRadius","cursor","borderColor","draggable","e","primary","secondary","length","size","keys","my"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiSidebar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  Divider,\n} from '@mui/material';\nimport { DUMMY_APIS, SMFG_APIS } from '../constants';\n\ninterface ApiSidebarProps {\n  lenderName: string;\n}\n\nconst ApiSidebar: React.FC<ApiSidebarProps> = ({ lenderName }) => {\n  const onDragStart = (event: React.DragEvent, api: any) => {\n    console.log('Dragging API:', api);\n    \n    // Enhanced logging to debug data structure\n    console.log('API name:', api.name);\n    console.log('API description:', api.description);\n    console.log('API category:', api.category);\n    console.log('API responses:', api.responses);\n    \n    // Store the API data as JSON in the dataTransfer with complete information\n    // Use a flatter structure to avoid nesting issues\n    const apiNodeData = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      data: {\n        label: api.name, // Set label explicitly for display\n        name: api.name,  // Ensure name is set\n        description: api.description || '',\n        api: api,        // Include the entire original API object\n        isApi: true      // Flag to identify as API node\n      }\n    };\n    \n    console.log('Serializing API node data:', apiNodeData);\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(apiNodeData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  // Define API type for better type safety\n  type ApiType = {\n    id: string;\n    name: string;\n    description: string;\n    category: string;\n    responses?: Array<{id: string; name: string; description: string; data: {status: string}}>\n  };\n\n  // Select the appropriate API list based on the lender name\n  const apiList = lenderName === 'SMFG' ? SMFG_APIS : DUMMY_APIS;\n  \n  // Group APIs by category with proper type annotations\n  const apisByCategory = apiList.reduce<Record<string, ApiType[]>>((acc, api: ApiType) => {\n    if (!acc[api.category]) {\n      acc[api.category] = [];\n    }\n    acc[api.category].push(api);\n    return acc;\n  }, {});\n\n  return (\n    <Box\n      sx={{\n        width: 300,\n        height: '100vh',\n        backgroundColor: 'white',\n        borderRight: '1px solid #e0e0e0',\n        overflow: 'auto',\n        pt: 8, // Account for header\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Available APIs\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Drag and drop APIs to create your workflow\n        </Typography>\n\n        {Object.entries(apisByCategory).map(([category, apis]: [string, ApiType[]]) => (\n          <Box key={category} sx={{ mb: 3 }}>\n            <Typography variant=\"subtitle1\" sx={{ mb: 1, fontWeight: 'bold' }}>\n              {category}\n            </Typography>\n            <List dense>\n              {apis.map((api: ApiType) => (\n                <ListItem\n                  key={api.id}\n                  sx={{\n                    border: '1px solid #e0e0e0',\n                    borderRadius: 1,\n                    mb: 1,\n                    cursor: 'grab',\n                    '&:hover': {\n                      backgroundColor: '#f5f5f5',\n                      borderColor: '#1976d2',\n                    },\n                    '&:active': {\n                      cursor: 'grabbing',\n                    },\n                  }}\n                  draggable\n                  onDragStart={(e) => onDragStart(e, api)}\n                >\n                  <ListItemText\n                    primary={api.name}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                          {api.description}\n                        </Typography>\n                        {api.responses && (\n                          <Chip\n                            label={`${api.responses.length} responses`}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        )}\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n            {category !== Object.keys(apisByCategory)[Object.keys(apisByCategory).length - 1] && (\n              <Divider sx={{ my: 2 }} />\n            )}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ApiSidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}