{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ResponseSelectorModal.tsx\";\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, List, ListItem, ListItemButton, ListItemText, Typography, Box, Chip } from '@mui/material';\nimport { DUMMY_APIS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponseSelectorModal = ({\n  open,\n  onClose,\n  onSelect,\n  sourceNodeId\n}) => {\n  // Find the API associated with the source node\n  // For now, we'll use the first API as an example\n  const sourceApi = DUMMY_APIS[0]; // This should be dynamically determined based on sourceNodeId\n\n  if (!sourceApi) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Select Response from \", sourceApi.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Choose which response should trigger the next API in the workflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"Available Responses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: sourceApi.responses.map(response => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => onSelect(response.id),\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 1,\n              mb: 1,\n              '&:hover': {\n                borderColor: '#1976d2',\n                backgroundColor: '#f8f9ff'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1,\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: response.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Response\",\n                  size: \"small\",\n                  color: \"primary\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mb: 1\n                  },\n                  children: response.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [\"Sample Data: \", JSON.stringify(response.data, null, 2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, response.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = ResponseSelectorModal;\nexport default ResponseSelectorModal;\nvar _c;\n$RefreshReg$(_c, \"ResponseSelectorModal\");","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","List","ListItem","ListItemButton","ListItemText","Typography","Box","Chip","DUMMY_APIS","jsxDEV","_jsxDEV","ResponseSelectorModal","open","onClose","onSelect","sourceNodeId","sourceApi","maxWidth","fullWidth","children","variant","name","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","mb","gutterBottom","responses","map","response","disablePadding","onClick","id","border","borderRadius","borderColor","backgroundColor","primary","display","alignItems","gap","fontWeight","label","size","secondary","description","JSON","stringify","data","_c","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ResponseSelectorModal.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Typography,\n  Box,\n  Chip,\n} from '@mui/material';\nimport { DUMMY_APIS } from '../constants';\n\ninterface ResponseSelectorModalProps {\n  open: boolean;\n  onClose: () => void;\n  onSelect: (responseId: string) => void;\n  sourceNodeId: string;\n}\n\nconst ResponseSelectorModal: React.FC<ResponseSelectorModalProps> = ({\n  open,\n  onClose,\n  onSelect,\n  sourceNodeId,\n}) => {\n  // Find the API associated with the source node\n  // For now, we'll use the first API as an example\n  const sourceApi = DUMMY_APIS[0]; // This should be dynamically determined based on sourceNodeId\n\n  if (!sourceApi) {\n    return null;\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        <Typography variant=\"h6\">\n          Select Response from {sourceApi.name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Choose which response should trigger the next API in the workflow\n        </Typography>\n      </DialogTitle>\n      \n      <DialogContent>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Available Responses:\n          </Typography>\n        </Box>\n        \n        <List>\n          {sourceApi.responses.map((response) => (\n            <ListItem key={response.id} disablePadding>\n              <ListItemButton\n                onClick={() => onSelect(response.id)}\n                sx={{\n                  border: '1px solid #e0e0e0',\n                  borderRadius: 1,\n                  mb: 1,\n                  '&:hover': {\n                    borderColor: '#1976d2',\n                    backgroundColor: '#f8f9ff',\n                  },\n                }}\n              >\n                <ListItemText\n                  primary={\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                        {response.name}\n                      </Typography>\n                      <Chip \n                        label=\"Response\" \n                        size=\"small\" \n                        color=\"primary\" \n                        variant=\"outlined\" \n                      />\n                    </Box>\n                  }\n                  secondary={\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                        {response.description}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Sample Data: {JSON.stringify(response.data, null, 2)}\n                      </Typography>\n                    </Box>\n                  }\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ResponseSelectorModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}