{"ast":null,"code":"var _jsxFileName = \"/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiSidebar.tsx\";\nimport React from 'react';\nimport { Box, Typography, List, ListItem, ListItemText, Chip, Divider } from '@mui/material';\nimport { DUMMY_APIS, SMFG_APIS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiSidebar = ({\n  lenderName\n}) => {\n  const onDragStart = (event, api) => {\n    console.log('Dragging API:', api);\n\n    // Enhanced logging to debug data structure\n    console.log('API name:', api.name);\n    console.log('API description:', api.description);\n    console.log('API category:', api.category);\n    console.log('API responses:', api.responses);\n\n    // Store the API data as JSON in the dataTransfer with complete information\n    // Use a flatter structure to avoid nesting issues\n    const apiNodeData = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      data: {\n        label: api.name,\n        // Set label explicitly for display\n        name: api.name,\n        // Ensure name is set\n        description: api.description || '',\n        api: api,\n        // Include the entire original API object\n        isApi: true // Flag to identify as API node\n      }\n    };\n    console.log('Serializing API node data:', apiNodeData);\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(apiNodeData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  // Define API type for better type safety\n\n  // Select the appropriate API list based on the lender name (ensure proper typing)\n  const apiList = lenderName === 'SMFG' ? SMFG_APIS : DUMMY_APIS;\n\n  // Group APIs by category\n  const apisByCategory = apiList.reduce((acc, api) => {\n    (acc[api.category] ||= []).push(api);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 300,\n      height: '100vh',\n      backgroundColor: 'white',\n      borderRight: '1px solid #e0e0e0',\n      overflow: 'auto',\n      pt: 8 // Account for header\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Available APIs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: \"Drag and drop APIs to create your workflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), Object.entries(apisByCategory).map(([category, apis]) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            mb: 1,\n            fontWeight: 'bold'\n          },\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: apis.map(api => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 1,\n              mb: 1,\n              cursor: 'grab',\n              '&:hover': {\n                backgroundColor: '#f5f5f5',\n                borderColor: '#1976d2'\n              },\n              '&:active': {\n                cursor: 'grabbing'\n              }\n            },\n            draggable: true,\n            onDragStart: e => onDragStart(e, api),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: api.name,\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mb: 1\n                  },\n                  children: api.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this), api.responses && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `${api.responses.length} responses`,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, api.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), category !== Object.keys(apisByCategory)[Object.keys(apisByCategory).length - 1] && /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = ApiSidebar;\nexport default ApiSidebar;\nvar _c;\n$RefreshReg$(_c, \"ApiSidebar\");","map":{"version":3,"names":["React","Box","Typography","List","ListItem","ListItemText","Chip","Divider","DUMMY_APIS","SMFG_APIS","jsxDEV","_jsxDEV","ApiSidebar","lenderName","onDragStart","event","api","console","log","name","description","category","responses","apiNodeData","id","Date","now","type","data","label","isApi","dataTransfer","setData","JSON","stringify","effectAllowed","apiList","apisByCategory","reduce","acc","push","sx","width","height","backgroundColor","borderRight","overflow","pt","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","Object","entries","map","apis","fontWeight","dense","border","borderRadius","cursor","borderColor","draggable","e","primary","secondary","length","size","keys","my","_c","$RefreshReg$"],"sources":["/Users/pranav.nambiar/Documents/lss-workflow-ui/src/components/ApiSidebar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Chip,\n  Divider,\n} from '@mui/material';\nimport { DUMMY_APIS, SMFG_APIS } from '../constants';\n\ninterface ApiSidebarProps {\n  lenderName: string;\n}\n\nconst ApiSidebar: React.FC<ApiSidebarProps> = ({ lenderName }) => {\n  const onDragStart = (event: React.DragEvent, api: any) => {\n    console.log('Dragging API:', api);\n    \n    // Enhanced logging to debug data structure\n    console.log('API name:', api.name);\n    console.log('API description:', api.description);\n    console.log('API category:', api.category);\n    console.log('API responses:', api.responses);\n    \n    // Store the API data as JSON in the dataTransfer with complete information\n    // Use a flatter structure to avoid nesting issues\n    const apiNodeData = {\n      id: `api-${Date.now()}`,\n      type: 'api',\n      data: {\n        label: api.name, // Set label explicitly for display\n        name: api.name,  // Ensure name is set\n        description: api.description || '',\n        api: api,        // Include the entire original API object\n        isApi: true      // Flag to identify as API node\n      }\n    };\n    \n    console.log('Serializing API node data:', apiNodeData);\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(apiNodeData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  // Define API type for better type safety\n  type ApiType = {\n    id: string;\n    name: string;\n    description: string;\n    category: string;\n    responses?: Array<{id: string; name: string; description: string; data: {status: string}}>\n  };\n\n  // Select the appropriate API list based on the lender name (ensure proper typing)\n  const apiList: ApiType[] = (lenderName === 'SMFG' ? SMFG_APIS : DUMMY_APIS) as ApiType[];\n\n  // Group APIs by category\n  const apisByCategory = apiList.reduce((acc: Record<string, ApiType[]>, api: ApiType) => {\n    (acc[api.category] ||= []).push(api);\n    return acc;\n  }, {} as Record<string, ApiType[]>);\n\n  return (\n    <Box\n      sx={{\n        width: 300,\n        height: '100vh',\n        backgroundColor: 'white',\n        borderRight: '1px solid #e0e0e0',\n        overflow: 'auto',\n        pt: 8, // Account for header\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Available APIs\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          Drag and drop APIs to create your workflow\n        </Typography>\n\n        {Object.entries(apisByCategory).map(([category, apis]: [string, ApiType[]]) => (\n          <Box key={category} sx={{ mb: 3 }}>\n            <Typography variant=\"subtitle1\" sx={{ mb: 1, fontWeight: 'bold' }}>\n              {category}\n            </Typography>\n            <List dense>\n              {apis.map((api: ApiType) => (\n                <ListItem\n                  key={api.id}\n                  sx={{\n                    border: '1px solid #e0e0e0',\n                    borderRadius: 1,\n                    mb: 1,\n                    cursor: 'grab',\n                    '&:hover': {\n                      backgroundColor: '#f5f5f5',\n                      borderColor: '#1976d2',\n                    },\n                    '&:active': {\n                      cursor: 'grabbing',\n                    },\n                  }}\n                  draggable\n                  onDragStart={(e) => onDragStart(e, api)}\n                >\n                  <ListItemText\n                    primary={api.name}\n                    secondary={\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                          {api.description}\n                        </Typography>\n                        {api.responses && (\n                          <Chip\n                            label={`${api.responses.length} responses`}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        )}\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n            {category !== Object.keys(apisByCategory)[Object.keys(apisByCategory).length - 1] && (\n              <Divider sx={{ my: 2 }} />\n            )}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ApiSidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}